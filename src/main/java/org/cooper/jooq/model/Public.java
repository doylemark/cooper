/*
 * This file is generated by jOOQ.
 */
package org.cooper.jooq.model;


import java.util.Arrays;
import java.util.List;

import org.cooper.jooq.model.tables.Cloudlet;
import org.cooper.jooq.model.tables.CloudletMetric;
import org.cooper.jooq.model.tables.FlywaySchemaHistory;
import org.cooper.jooq.model.tables.Host;
import org.cooper.jooq.model.tables.HostMetric;
import org.cooper.jooq.model.tables.Simulation;
import org.cooper.jooq.model.tables.Time;
import org.cooper.jooq.model.tables.Vm;
import org.cooper.jooq.model.tables.VmMetric;
import org.jooq.Catalog;
import org.jooq.Table;
import org.jooq.impl.SchemaImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Public extends SchemaImpl {

    private static final long serialVersionUID = 1L;

    /**
     * The reference instance of <code>public</code>
     */
    public static final Public PUBLIC = new Public();

    /**
     * The table <code>public.cloudlet</code>.
     */
    public final Cloudlet CLOUDLET = Cloudlet.CLOUDLET;

    /**
     * The table <code>public.cloudlet_metric</code>.
     */
    public final CloudletMetric CLOUDLET_METRIC = CloudletMetric.CLOUDLET_METRIC;

    /**
     * The table <code>public.flyway_schema_history</code>.
     */
    public final FlywaySchemaHistory FLYWAY_SCHEMA_HISTORY = FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY;

    /**
     * The table <code>public.host</code>.
     */
    public final Host HOST = Host.HOST;

    /**
     * The table <code>public.host_metric</code>.
     */
    public final HostMetric HOST_METRIC = HostMetric.HOST_METRIC;

    /**
     * The table <code>public.simulation</code>.
     */
    public final Simulation SIMULATION = Simulation.SIMULATION;

    /**
     * The table <code>public.time</code>.
     */
    public final Time TIME = Time.TIME;

    /**
     * The table <code>public.vm</code>.
     */
    public final Vm VM = Vm.VM;

    /**
     * The table <code>public.vm_metric</code>.
     */
    public final VmMetric VM_METRIC = VmMetric.VM_METRIC;

    /**
     * No further instances allowed
     */
    private Public() {
        super("public", null);
    }


    @Override
    public Catalog getCatalog() {
        return DefaultCatalog.DEFAULT_CATALOG;
    }

    @Override
    public final List<Table<?>> getTables() {
        return Arrays.asList(
            Cloudlet.CLOUDLET,
            CloudletMetric.CLOUDLET_METRIC,
            FlywaySchemaHistory.FLYWAY_SCHEMA_HISTORY,
            Host.HOST,
            HostMetric.HOST_METRIC,
            Simulation.SIMULATION,
            Time.TIME,
            Vm.VM,
            VmMetric.VM_METRIC
        );
    }
}
